name: Charlotte Control Bridge

on:
  workflow_dispatch:
  issue_comment:
    types: [created]

permissions:
  contents: write
  pull-requests: write
  issues: write

concurrency:
  group: charlotte-bridge
  cancel-in-progress: false

env:
  ALLOWED_ACTOR: "DBst-23"    # <-- your GitHub username

jobs:
  route:
    if: >
      (github.event_name == 'workflow_dispatch' && github.actor == env.ALLOWED_ACTOR)
      || (github.event_name == 'issue_comment'
          && github.actor == env.ALLOWED_ACTOR
          && contains(github.event.comment.body, '/charlotte'))
    runs-on: ubuntu-latest
    steps:

      - name: Set up job
        run: echo "Charlotte bridge starting..."

      - name: Checkout
        uses: actions/checkout@v4

      - name: Show command
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "::notice title=Trigger::Manual run"
          else
            echo "::notice title=Comment::${{ github.event.comment.body }}"
          fi

      ##########################################################
      # NBA PULL
      ##########################################################
      - name: NBA pull
        if: github.event_name == 'workflow_dispatch'
        shell: bash
        run: |
          set -euo pipefail
          echo "Pulling NBA data..."
          mkdir -p data/raw/nba
          echo '{"status":"ok","league":"NBA"}' > data/raw/nba/sample.json
          echo "NBA data written."

      - name: Commit NBA data
        if: github.event_name == 'workflow_dispatch'
        shell: bash
        run: |
          set -e
          git config user.name "sharpedge-bot"
          git config user.email "sharpedge-bot@users.noreply.github.com"
          git add data/raw/nba/*.json || true
          git commit -m "chore(data): NBA auto-pull" || echo "Nothing to commit."
          git push

      ##########################################################
      # MLB PULL
      ##########################################################
      - name: MLB pull
        if: github.event_name == 'workflow_dispatch'
        shell: bash
        env:
          MLB_API_KEY: ${{ secrets.MLB_API_KEY }}
        run: |
          set -euo pipefail
          python - <<'PY'
          import os, json, datetime as dt, urllib.request, pathlib

          today = dt.date.today().isoformat()
          url = f"https://statsapi.mlb.com/api/v1/schedule?sportId=1&date={today}"
          headers = {}
          key = os.environ.get("MLB_API_KEY", "")
          if key:
              headers["Authorization"] = f"Bearer {key}"

          req = urllib.request.Request(url, headers=headers)
          try:
              with urllib.request.urlopen(req, timeout=20) as r:
                  data = json.load(r)`
                  print(f"Fetched {len(data.get('dates', []))} MLB data entries")
          except Exception as e:
              print("Error fetching MLB data:", e)
              data = {"error": str(e), "url": url}
          outdir = pathlib.Path("data/raw/mlb")
          outdir.mkdir(parents=True, exist_ok=True)
          out = outdir / f"games_{today}.json"
          out.write_text(json.dumps(data, indent=2))
          print("Wrote", out)
          PY

      - name: Commit MLB data
        if: github.event_name == 'workflow_dispatch'
        shell: bash
        run: |
          set -e
          git config user.name "sharpedge-bot"
          git config user.email "sharpedge-bot@users.noreply.github.com"
          git add data/raw/mlb/*.json || true
          git commit -m "chore(data): MLB auto-pull" || echo "Nothing to commit."
          git push

      ##########################################################
      # NFL PULL
      ##########################################################
      - name: NFL pull
        if: github.event_name == 'workflow_dispatch'
        shell: bash
        env:
          NFL_API_KEY: ${{ secrets.NFL_API_KEY }}
        run: |
          set -euo pipefail
          python - <<'PY'
          import os, json, datetime as dt, urllib.request, pathlib

          today = dt.date.today().isoformat()
          url = f"https://site.api.espn.com/apis/v2/sports/football/nfl/scoreboard?dates={today}"
          headers = {}
          key = os.environ.get("NFL_API_KEY", "")
          if key:
              headers["Authorization"] = f"Bearer {key}"

          req = urllib.request.Request(url, headers=headers)
          try:
              with urllib.request.urlopen(req, timeout=20) as r:
                  data = json.load(r)
                  events = data.get("events", [])
                  print(f"Fetched {len(events)} NFL games")
          except Exception as e:
              print("Error fetching NFL data:", e)
              data = {"error": str(e), "url": url}
          outdir = pathlib.Path("data/raw/nfl")
          outdir.mkdir(parents=True, exist_ok=True)
          out = outdir / f"games_{today}.json"
          out.write_text(json.dumps(data, indent=2))
          print("Wrote", out)
          PY

      - name: Commit NFL data
        if: github.event_name == 'workflow_dispatch'
        shell: bash
        run: |
          set -e
          git config user.name "sharpedge-bot"
          git config user.email "sharpedge-bot@users.noreply.github.com"
          git add data/raw/nfl/*.json || true
          git commit -m "chore(data): NFL auto-pull" || echo "Nothing to commit."
          git push

      ##########################################################
      # STABLE RELEASE TAG
      ##########################################################
      - name: Stable Release
        if: github.event_name == 'workflow_dispatch'
        shell: bash
        run: |
          set -euo pipefail
          VERSION_TAG="v$(date +'%Y.%m.%d-%H%M')"
          echo "Creating new stable release tag: ${VERSION_TAG}"
          git tag -a "${VERSION_TAG}" -m "Stable release ${VERSION_TAG}"
          git push origin "${VERSION_TAG}"
          echo "::notice title=Release::Published ${VERSION_TAG}"

      ##########################################################
      # HELP COMMANDS
      ##########################################################
      - name: Help
        if: contains(github.event.comment.body, '/charlotte help')
        run: |
          echo "::notice title=Commands::"
          echo "/charlotte nba pull"
          echo "/charlotte mlb pull"
          echo "/charlotte nfl pull"
          echo "/charlotte help"

      ##########################################################
      # COMPLETE JOB
      ##########################################################
      - name: Complete job
        run: echo "Charlotte bridge completed successfully."