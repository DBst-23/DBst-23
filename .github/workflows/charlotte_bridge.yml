name: Charlotte Control Bridge

on:
  workflow_dispatch:
  issue_comment:
    types: [created]

permissions:
  contents: write
  pull-requests: write
  issues: write

concurrency:
  group: charlotte-bridge
  cancel-in-progress: false

jobs:
  route:
    # Only allow you (DBst-23) to run this, either manually or via '/charlotte' comments
    if: >-
      (github.event_name == 'workflow_dispatch' && github.actor == 'DBst-23') ||
      (github.event_name == 'issue_comment' && github.actor == 'DBst-23' &&
       contains(github.event.comment.body, '/charlotte'))
    runs-on: ubuntu-latest
    steps:
      - name: Set up job
        shell: bash
        run: echo "Charlotte bridge starting..."

      - name: Checkout
        uses: actions/checkout@v4

      - name: Show command
        shell: bash
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "::notice title=Trigger::Manual run"
          else
            echo "::notice title=Comment::${{ github.event.comment.body }}"
          fi

      ##########################################################
      # NBA PULL (placeholder demo – safe, no external API)
      ##########################################################
      - name: NBA pull
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p data/raw/nba
          echo '{"status":"ok","league":"NBA","source":"placeholder"}' > data/raw/nba/sample.json
          echo "NBA data written."

      - name: Commit NBA data
        shell: bash
        run: |
          set -e
          git config user.name  "sharpedge-bot"
          git config user.email "sharpedge-bot@users.noreply.github.com"
          git add data/raw/nba/*.json || true
          git commit -m "chore(data): NBA auto-pull" || echo "Nothing to commit."
          git push || echo "No push needed."

      ##########################################################
      # MLB PULL (placeholder demo – safe, no external API)
      ##########################################################
      - name: MLB pull
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p data/raw/mlb
          echo '{"status":"ok","league":"MLB","source":"placeholder"}' > data/raw/mlb/sample.json
          echo "MLB data written."

      - name: Commit MLB data
        shell: bash
        run: |
          set -e
          git config user.name  "sharpedge-bot"
          git config user.email "sharpedge-bot@users.noreply.github.com"
          git add data/raw/mlb/*.json || true
          git commit -m "chore(data): MLB auto-pull" || echo "Nothing to commit."
          git push || echo "No push needed."

      ##########################################################
      # NFL PULL (placeholder demo – safe, no external API)
      ##########################################################
      - name: NFL pull
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p data/raw/nfl
          echo '{"status":"ok","league":"NFL","source":"placeholder"}' > data/raw/nfl/sample.json
          echo "NFL data written."

      - name: Commit NFL data
        shell: bash
        run: |
          set -e
          git config user.name  "sharpedge-bot"
          git config user.email "sharpedge-bot@users.noreply.github.com"
          git add data/raw/nfl/*.json || true
          git commit -m "chore(data): NFL auto-pull" || echo "Nothing to commit."
          git push || echo "No push needed."

      ##########################################################
      # STABLE RELEASE TAG (optional)
      ##########################################################
      - name: Stable Release
        shell: bash
        run: |
          set -euo pipefail
          VERSION_TAG="v$(date +'%Y.%m.%d-%H%M')"
          echo "Creating new stable release tag: ${VERSION_TAG}"
          git tag -a "${VERSION_TAG}" -m "Stable release ${VERSION_TAG}" || {
            echo "Tag may already exist; continuing."
          }
          git push origin "${VERSION_TAG}" || {
            echo "No tag pushed (maybe exists already); continuing."
          }
          echo "::notice title=Release::Published ${VERSION_TAG}"

      ##########################################################
      # HELP
      ##########################################################
      - name: Help
        if: ${{ github.event_name == 'issue_comment' && contains(github.event.comment.body, '/charlotte help') }}
        shell: bash
        run: |
          echo "::notice title=Commands::"
          echo "/charlotte nba pull"
          echo "/charlotte mlb pull"
          echo "/charlotte nfl pull"
          echo "/charlotte help"

      ##########################################################
      # COMPLETE
      ##########################################################
      - name: Complete job
        shell: bash
        run: echo "Charlotte bridge completed successfully."
