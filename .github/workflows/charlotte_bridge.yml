name: Charlotte Control Bridge

on:
  workflow_dispatch:
  issue_comment:
    types: [created]

permissions:
  contents: write
  pull-requests: write
  issues: write

concurrency:
  group: charlotte-bridge
  cancel-in-progress: false

jobs:
  route:
    # Only run if manually dispatched OR a comment starting with "/charlotte " is posted
    if: github.event_name == 'workflow_dispatch' || contains(github.event.comment.body, '/charlotte ')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show command
        run: |
          echo "Event: ${{ github.event_name }}"
          echo "Comment: '${{ github.event.comment.body || '' }}'"

      # =========================
      # NBA pull
      # =========================
      - name: NBA pull
        if: github.event_name == 'workflow_dispatch' || contains(github.event.comment.body, '/charlotte nba pull')
        shell: bash
        run: |
          set -e
          python - <<'PY'
          import os, json, datetime as dt, pathlib, urllib.request
          today = dt.date.today().isoformat()
          url = f"https://api.balldontlie.io/v1/games?dates[]={today}"

          headers = {}
          key = os.environ.get('BALLDONTLIE_API_KEY', '')
          if key:
              headers["Authorization"] = f"Bearer {key}"

          req = urllib.request.Request(url, headers=headers)
          try:
              with urllib.request.urlopen(req, timeout=60) as r:
                  data = json.load(r)
                  print(f"Fetched {len(data.get('data', []))} games.")
          except Exception as e:
              print("Error fetching data:", e)
              data = {"error": str(e)}

          outdir = pathlib.Path("data/raw/nba")
          outdir.mkdir(parents=True, exist_ok=True)
          out = outdir / f"games_{today}.json"
          out.write_text(json.dumps(data, indent=2))
          print("Wrote", out)
          PY

      - name: Commit NBA data
        if: github.event_name == 'workflow_dispatch' || contains(github.event.comment.body, '/charlotte nba pull')
        shell: bash
        run: |
          git config user.name "sharpedge-bot"
          git config user.email "sharpedge-bot@users.noreply.github.com"
          git add data/raw/nba/*.json || true
          git commit -m "chore(data): NBA auto-pull" || echo "No NBA changes to commit"
          git push

      # =========================
      # Manual log helper (optional)
/*    - name: Commit manual edge
        if: contains(github.event.comment.body, '/charlotte log ')
        shell: bash
        run: |
          set -e
          if ! git diff --quiet; then
            git add Manual_Edge_Logbook/*.json || true
            git commit -m "chore(log): manual edge entry from issue comment" || echo "No log changes"
            git push origin HEAD:${{ github.ref_name }}
          else
            echo "No manual edge changes to commit."
          fi
*/
      # =========================
      # Help
      # =========================
      - name: Help
        if: contains(github.event.comment.body, '/charlotte help')
        run: |
          echo "::notice::Commands:"
          echo "/charlotte nba pull"
          echo "/charlotte log json { ... }"
          echo "/charlotte odds fetch <league> <market>"
          echo "/charlotte help"
